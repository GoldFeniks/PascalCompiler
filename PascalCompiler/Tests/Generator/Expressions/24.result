include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@405edccccccccccd dq 405edccccccccccdr ;123.45
__real@0c059200000000000 dq 0c059200000000000r ;-100.5
.code
start:
push ebp
mov ebp, esp
sub esp, 30
push dword ptr [__real@405edccccccccccd + 4]
push dword ptr [__real@405edccccccccccd]
pop dword ptr [ebp - 8]
pop dword ptr [ebp - 4]
push dword ptr [__real@0c059200000000000 + 4]
push dword ptr [__real@0c059200000000000]
pop dword ptr [ebp - 16]
pop dword ptr [ebp - 12]
push 48
pop dword ptr [ebp - 20]
push -23
pop dword ptr [ebp - 24]
sub esp, 1
mov byte ptr [esp], 48
mov al, byte ptr [esp]
add esp, 1
mov byte ptr [ebp - 25], al
sub esp, 1
mov byte ptr [esp], -9
mov al, byte ptr [esp]
add esp, 1
mov byte ptr [ebp - 26], al
mov al, byte ptr [ebp - 25]
sub esp, 1
mov byte ptr [esp], al
mov al, byte ptr [ebp - 26]
sub esp, 1
mov byte ptr [esp], al
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
setle al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
push dword ptr [ebp - 12]
push dword ptr [ebp - 16]
push dword ptr [ebp - 4]
push dword ptr [ebp - 8]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setae al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
and eax, ebx
push eax
pop eax
mov dword ptr [ebp - 30], eax
push dword ptr [ebp - 30]
mov eax, esp
printf("%d\n", dword ptr [eax])
add esp, 4
push dword ptr [ebp - 20]
push dword ptr [ebp - 24]
pop ebx
cmp dword ptr [esp], ebx
setle al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
push dword ptr [ebp - 12]
push dword ptr [ebp - 16]
push dword ptr [ebp - 4]
push dword ptr [ebp - 8]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setbe al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
or eax, ebx
push eax
mov al, byte ptr [ebp - 26]
sub esp, 1
mov byte ptr [esp], al
mov al, byte ptr [ebp - 25]
sub esp, 1
mov byte ptr [esp], al
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
sete al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
xor eax, ebx
push eax
pop eax
mov dword ptr [ebp - 30], eax
push dword ptr [ebp - 30]
mov eax, esp
printf("%d\n", dword ptr [eax])
add esp, 4
push dword ptr [ebp - 20]
pop eax
sub esp, 1
mov byte ptr [esp], al
sub esp, 1
mov byte ptr [esp], 48
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
setne al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov al, byte ptr [ebp - 26]
sub esp, 1
mov byte ptr [esp], al
mov al, byte ptr [ebp - 25]
sub esp, 1
mov byte ptr [esp], al
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
setg al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
and eax, ebx
push eax
not dword ptr [esp]
push dword ptr [ebp - 24]
push dword ptr [ebp - 20]
pop ebx
cmp dword ptr [esp], ebx
setg al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
push dword ptr [ebp - 12]
push dword ptr [ebp - 16]
push dword ptr [ebp - 4]
push dword ptr [ebp - 8]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
ucomisd xmm0, xmm1
lahf 
test ah, 68
jp $LN15AT67F@
mov dword ptr [esp], -1
jmp $LN15AT67E@
$LN15AT67F@:
mov dword ptr [esp], 0
$LN15AT67E@:
pop ebx
pop eax
or eax, ebx
push eax
pop ebx
pop eax
xor eax, ebx
push eax
pop eax
mov dword ptr [ebp - 30], eax
push dword ptr [ebp - 30]
mov eax, esp
printf("%d\n", dword ptr [eax])
add esp, 4
mov esp, ebp
pop ebp
exit
end start