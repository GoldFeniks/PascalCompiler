include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@405edccccccccccd dq 405edccccccccccdr ;123.45
__real@0c059200000000000 dq 0c059200000000000r ;-100.5
__string@0 db 37, 100, 10, 0
.code
__function@LN0AT0test:
enter 30, 1
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
push dword ptr [__real@405edccccccccccd + 4]
push dword ptr [__real@405edccccccccccd]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
push dword ptr [__real@0c059200000000000 + 4]
push dword ptr [__real@0c059200000000000]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
push 48
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
push -23
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 33
push eax
sub esp, 1
mov byte ptr [esp], 48
mov al, byte ptr [esp]
add esp, 1
pop ebx
mov byte ptr [ebx], al
mov eax, dword ptr [ebp - 4]
sub eax, 34
push eax
sub esp, 1
mov byte ptr [esp], -9
mov al, byte ptr [esp]
add esp, 1
pop ebx
mov byte ptr [ebx], al
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 33
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
mov eax, dword ptr [ebp - 4]
sub eax, 34
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
setle al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setae al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
and eax, ebx
push eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setle al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setbe al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
or eax, ebx
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 34
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
mov eax, dword ptr [ebp - 4]
sub eax, 33
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
sete al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
xor eax, ebx
push eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
pop eax
sub esp, 1
mov byte ptr [esp], al
sub esp, 1
mov byte ptr [esp], 48
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
setne al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 34
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
mov eax, dword ptr [ebp - 4]
sub eax, 33
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
movsx ebx, byte ptr [esp]
movsx eax, byte ptr [esp + 1]
sub esp, 2
cmp eax, ebx
setg al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop ebx
pop eax
and eax, ebx
push eax
not dword ptr [esp]
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setg al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
ucomisd xmm0, xmm1
lahf 
test ah, 68
jp $LN17AT67CONDFAIL@
mov dword ptr [esp], -1
jmp $LN17AT67ENDCOND@
$LN17AT67CONDFAIL@:
mov dword ptr [esp], 0
$LN17AT67ENDCOND@:
pop ebx
pop eax
or eax, ebx
push eax
pop ebx
pop eax
xor eax, ebx
push eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
leave
ret 0

start:
call __function@LN0AT0test
exit
end start