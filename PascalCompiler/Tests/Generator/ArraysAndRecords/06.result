include c:\masm32\include\masm32rt.inc
.xmm
.const
__string@0 db 37, 100, 37, 99, 37, 100, 37, 99, 37, 100, 37, 99, 37, 100, 10, 0
.code
__function@LN0AT0test:
enter 48, 1
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
push 2
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
push 5
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
push 2
pop ebx
pop eax
imul ebx
push eax
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
push 10
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
push 1
pop ebx
pop eax
sub eax, ebx
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
imul ebx
push eax
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
push 5
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
push 2
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
cdq 
idiv ebx
push edx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
push 1
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
cdq 
idiv ebx
push edx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
pop eax
push dword ptr [eax]
sub esp, 1
mov byte ptr [esp], 10
movsx eax, byte ptr [esp]
add esp, 1
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
pop eax
push dword ptr [eax]
sub esp, 1
mov byte ptr [esp], 10
movsx eax, byte ptr [esp]
add esp, 1
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
push 1
pop ebx
pop eax
sub eax, ebx
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
imul ebx
push eax
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
pop eax
push dword ptr [eax]
sub esp, 1
mov byte ptr [esp], 10
movsx eax, byte ptr [esp]
add esp, 1
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 44
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
push dword ptr [eax]
push 2
pop ebx
pop eax
imul ebx
push eax
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add dword ptr [esp], eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 32
leave
ret 0

start:
call __function@LN0AT0test
exit
end start