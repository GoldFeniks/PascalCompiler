include c:\masm32\include\masm32rt.inc
.xmm
.const
__string@0 db 37,102,10,0
.code
__function@LN0AT0test:
enter 28, 1
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
push 5
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
push 2
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 16
push eax
push 13
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
push 5
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
push 1
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
mov ebx, ecx
pop ecx
pop eax
shl eax, cl
push eax
mov ecx, ebx
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
divsd xmm0, xmm1
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
mulsd xmm0, xmm1
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 16
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
cdq 
idiv ebx
push edx
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
cdq 
idiv ebx
push eax
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
leave
ret 0

start:
call __function@LN0AT0test
exit
end start