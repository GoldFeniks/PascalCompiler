include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@0c024333333333333 dq 0c024333333333333r ;-10.1
__real@4024333333333333 dq 4024333333333333r ;10.1
__string@3 db 10,114,49,32,102,114,111,109,32,104,32,0
__string@0 db 10,106,32,102,114,111,109,32,109,97,105,110,32,0
__string@1 db 105,32,102,114,111,109,32,109,97,105,110,32,0
__string@6 db 10,114,49,32,102,114,111,109,32,104,49,32,0
__string@5 db 37,115,37,102,37,115,37,102,10,0
__string@2 db 37,115,37,100,37,115,37,100,10,0
__string@4 db 114,32,102,114,111,109,32,104,32,0
__string@8 db 10,114,49,32,102,114,111,109,32,102,32,0
__string@7 db 114,32,102,114,111,109,32,104,49,32,0
__string@9 db 114,32,102,114,111,109,32,102,32,0
.code
__function@LN10AT9g:
enter 0, 3
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
push offset __string@0
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
push offset __string@1
push offset __string@2
call crt_printf
add esp, 20
mov eax, dword ptr [ebp - 8]
sub eax, 24
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@3
mov eax, dword ptr [ebp - 8]
sub eax, 16
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@4
push offset __string@5
call crt_printf
add esp, 28
leave 
ret 0

__function@LN22AT13h1:
enter 16, 4
mov eax, dword ptr [ebp - 16]
sub eax, 24
push eax
push dword ptr [__real@4024333333333333 + 4]
push dword ptr [__real@4024333333333333]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 16]
sub eax, 32
push eax
push dword ptr [__real@0c024333333333333 + 4]
push dword ptr [__real@0c024333333333333]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
push offset __string@0
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
push offset __string@1
push offset __string@2
call crt_printf
add esp, 20
mov eax, dword ptr [ebp - 16]
sub eax, 32
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@6
mov eax, dword ptr [ebp - 16]
sub eax, 24
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@7
push offset __string@5
call crt_printf
add esp, 28
leave 
ret 0

__function@LN30AT13h2:
enter 0, 4
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
push offset __string@0
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
push offset __string@1
push offset __string@2
call crt_printf
add esp, 20
mov eax, dword ptr [ebp - 12]
sub eax, 28
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@3
mov eax, dword ptr [ebp - 12]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@4
push offset __string@5
call crt_printf
add esp, 28
leave 
ret 0

__function@LN35AT9h:
enter 16, 3
mov eax, dword ptr [ebp - 12]
sub eax, 20
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
push 2
pop ebx
pop eax
imul ebx
push eax
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 12]
sub eax, 28
push eax
mov eax, dword ptr [ebp - 12]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
push 2
pop ebx
pop eax
imul ebx
push eax
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
push offset __string@0
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
push offset __string@1
push offset __string@2
call crt_printf
add esp, 20
mov eax, dword ptr [ebp - 12]
sub eax, 28
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@3
mov eax, dword ptr [ebp - 12]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@4
push offset __string@5
call crt_printf
add esp, 28
call __function@LN22AT13h1
call __function@LN30AT13h2
leave 
ret 0

__function@LN44AT5f:
enter 16, 2
mov eax, dword ptr [ebp - 8]
sub eax, 16
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
imul ebx
push eax
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 8]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
add eax, ebx
push eax
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
push offset __string@0
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
push offset __string@1
push offset __string@2
call crt_printf
add esp, 20
mov eax, dword ptr [ebp - 8]
sub eax, 24
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@8
mov eax, dword ptr [ebp - 8]
sub eax, 16
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@9
push offset __string@5
call crt_printf
add esp, 28
call __function@LN10AT9g
call __function@LN35AT9h
leave 
ret 0

__function@LN0AT0test:
enter 8, 1
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
push 2
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
push 3
pop eax
pop ebx
mov dword ptr [ebx], eax
call __function@LN44AT5f
leave 
ret 0

start:
call __function@LN0AT0test
exit
end start