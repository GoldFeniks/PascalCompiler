include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@4024333333333333 dq 4024333333333333r ;10.1
__real@403419999999999a dq 403419999999999ar ;20.1
__real@403e19999999999a dq 403e19999999999ar ;30.1
__string@0 db 37, 102, 10, 0
__string@1 db 37, 100, 10, 0
.code
__function@LN0AT0test:
enter 100, 1
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
push 10
pop eax
pop ebx
mov dword ptr [ebx], eax
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
add dword ptr [esp], 4
pop ecx
pop eax
mov ebx, 8
imul ebx
add ecx, eax
push ecx
push dword ptr [__real@4024333333333333 + 4]
push dword ptr [__real@4024333333333333]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
push 1
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
add dword ptr [esp], 4
pop ecx
pop eax
mov ebx, 8
imul ebx
add ecx, eax
push ecx
push dword ptr [__real@403419999999999a + 4]
push dword ptr [__real@403419999999999a]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
push 20
pop eax
pop ebx
mov dword ptr [ebx], eax
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
push dword ptr [__real@403e19999999999a + 4]
push dword ptr [__real@403e19999999999a]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
push 1
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
push 30
pop eax
pop ebx
mov dword ptr [ebx], eax
push 2
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
push 40
pop eax
pop ebx
mov dword ptr [ebx], eax
push 3
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
push 50
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 48
push eax
pop eax
pop ebx
mov ecx, 11
$LN26AT7COPYSTRUCT@:
mov edx, dword ptr [eax]
mov dword ptr [ebx], edx
add eax, 4
add ebx, 4
loop $LN26AT7COPYSTRUCT@
push 1
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 4
pop ecx
pop eax
mov ebx, 8
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 4
pop ecx
pop eax
mov ebx, 8
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
pop eax
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 8
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 8
push 1
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 8
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
push 3
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 8
push 2
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 104
push eax
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop eax
pop ebx
mov ecx, 3
$LN35AT10COPYSTRUCT@:
mov edx, dword ptr [eax]
mov dword ptr [ebx], edx
add eax, 4
add ebx, 4
loop $LN35AT10COPYSTRUCT@
push 2
mov eax, dword ptr [ebp - 4]
sub eax, 104
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 8
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 4
pop ecx
pop eax
mov ebx, 8
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push 2
push 0
mov eax, dword ptr [ebp - 4]
sub eax, 92
push eax
add dword ptr [esp], 20
pop ecx
pop eax
mov ebx, 24
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 12
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
push 2
mov eax, dword ptr [ebp - 4]
sub eax, 104
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 4
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
push offset __string@0
call crt_printf
add esp, 12
leave
ret 0

start:
call __function@LN0AT0test
exit
end start