include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@405edccccccccccd dq 405edccccccccccdr ;123.45
__real@0c059200000000000 dq 0c059200000000000r ;-100.5
__string@0 db 37, 102, 10, 0
__string@1 db 37, 100, 10, 0
.code
__function@LN0AT0test:
enter 38, 1
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
push dword ptr [__real@405edccccccccccd + 4]
push dword ptr [__real@405edccccccccccd]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
push dword ptr [__real@0c059200000000000 + 4]
push dword ptr [__real@0c059200000000000]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
push 48
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
push -23
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 41
push eax
sub esp, 1
mov byte ptr [esp], 48
mov al, byte ptr [esp]
add esp, 1
pop ebx
mov byte ptr [ebx], al
mov eax, dword ptr [ebp - 4]
sub eax, 42
push eax
sub esp, 1
mov byte ptr [esp], -9
mov al, byte ptr [esp]
add esp, 1
pop ebx
mov byte ptr [ebx], al
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
pop eax
push dword ptr [eax]
push 2
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
imul ebx
push eax
pop ebx
pop eax
add eax, ebx
push eax
push 1
pop ebx
pop eax
sub eax, ebx
push eax
push 6
mov ebx, ecx
pop ecx
pop eax
shl eax, cl
push eax
mov ecx, ebx
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
subsd xmm0, xmm1
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
mov eax, dword ptr [ebp - 4]
sub eax, 40
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 42
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
movsx eax, byte ptr [esp]
sub esp, 7
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 41
push eax
pop eax
mov al, byte ptr [eax]
sub esp, 1
mov byte ptr [esp], al
movsx eax, byte ptr [esp]
sub esp, 3
mov dword ptr [esp], eax
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
subsd xmm0, xmm1
movsd qword ptr [esp], xmm0
push 257
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
cvttsd2si eax, qword ptr [esp]
add esp, 4
mov dword ptr [esp], eax
push 2
pop ebx
pop eax
cdq 
idiv ebx
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 32
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
sub eax, ebx
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax]
pop ebx
pop eax
sub eax, ebx
push eax
push 11
pop ebx
pop eax
sub eax, ebx
push eax
push 6
mov ebx, ecx
pop ecx
pop eax
shr eax, cl
push eax
mov ecx, ebx
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
subsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
mulsd xmm0, xmm1
movsd qword ptr [esp], xmm0
cvttsd2si eax, qword ptr [esp]
add esp, 4
mov dword ptr [esp], eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 40
push eax
pop eax
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 8
leave
ret 0

start:
call __function@LN0AT0test
exit
end start