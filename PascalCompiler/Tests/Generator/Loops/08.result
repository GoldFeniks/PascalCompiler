include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@4024333333333333 dq 4024333333333333r ;10.1
__real@403419999999999a dq 403419999999999ar ;20.1
__string@0 db 37,100,10,0
__string@1 db 37,102,10,0
.code
__function@LN0AT0test:
enter 52, 1
mov eax, dword ptr [ebp - 4]
sub eax, 56
push eax
push 2
pop eax
pop ebx
mov dword ptr [ebx], eax
push 1
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
push dword ptr [__real@4024333333333333 + 4]
push dword ptr [__real@4024333333333333]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
push 1
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
push 10
pop eax
pop ebx
mov dword ptr [ebx], eax
push 2
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
push dword ptr [__real@403419999999999a + 4]
push dword ptr [__real@403419999999999a]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
push 2
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
push 20
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 56
push eax
pop eax
push dword ptr [eax]
push 1
pop eax
mov ebx, dword ptr [ebp - 4]
mov dword ptr [ebx - 56], eax
dec dword ptr [ebx - 56]
jmp $LN14AT5LOOPCOND@
$LN14AT5LOOPBODY@:
mov eax, dword ptr [ebp - 4]
sub eax, 56
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
mov eax, dword ptr [ebp - 4]
sub eax, 56
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
pop eax
pop ebx
mov ecx, 3
$LN16AT14COPYSTRUCT@:
mov edx, dword ptr [eax]
mov dword ptr [ebx], edx
add eax, 4
add ebx, 4
loop $LN16AT14COPYSTRUCT@
mov eax, dword ptr [ebp - 4]
sub eax, 56
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
$LN14AT5LOOPCOND@:
mov ebx, dword ptr [ebp - 4]
inc dword ptr [ebx - 56]
mov eax, dword ptr [esp]
cmp dword ptr [ebx - 56], eax
jle $LN14AT5LOOPBODY@
$LN14AT5LOOPEND@:
add esp, 4
push 1
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
push 2
mov eax, dword ptr [ebp - 4]
sub eax, 52
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 12
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@1
call crt_printf
add esp, 12
leave 
ret 0

start:
call __function@LN0AT0test
exit
end start