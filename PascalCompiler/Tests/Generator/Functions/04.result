include c:\masm32\include\masm32rt.inc
.xmm
.const
__string@0 db 37,100,32,37,100,10,0
__string@1 db 37,102,10,0
.code
__function@LN14AT1prod:
enter 12, 2
mov eax, dword ptr [ebp - 8]
sub eax, 16
push eax
push 1
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
push 10
push 1
pop eax
mov ebx, dword ptr [ebp - 8]
mov dword ptr [ebx - 20], eax
dec dword ptr [ebx - 20]
jmp $LN16AT5LOOPCOND@
$LN16AT5LOOPBODY@:
mov eax, dword ptr [ebp - 8]
sub eax, 16
push eax
mov eax, dword ptr [ebp - 8]
sub eax, 16
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 8]
sub eax, 20
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 8]
sub eax, -8
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 8
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 8]
sub eax, 20
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 8]
sub eax, -8
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 8
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
pop eax
push dword ptr [eax]
pop ebx
pop eax
sub eax, ebx
push eax
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
mulsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 8]
sub eax, 20
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 8]
sub eax, -8
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 8
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 8]
sub eax, 20
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 8]
sub eax, -8
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 8
imul ebx
add ecx, eax
push ecx
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
$LN16AT5LOOPCOND@:
mov ebx, dword ptr [ebp - 8]
inc dword ptr [ebx - 20]
mov eax, dword ptr [esp]
cmp dword ptr [ebx - 20], eax
jle $LN16AT5LOOPBODY@
$LN16AT5LOOPEND@:
add esp, 4
movsd xmm0, qword ptr [ebp - 16]
leave 
ret 80
leave
ret 80

__function@LN0AT0test:
enter 84, 1
push 10
push 1
pop eax
mov ebx, dword ptr [ebp - 4]
mov dword ptr [ebx - 88], eax
dec dword ptr [ebx - 88]
jmp $LN29AT5LOOPCOND@
$LN29AT5LOOPBODY@:
mov eax, dword ptr [ebp - 4]
sub eax, 88
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 84
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 8
imul ebx
add ecx, eax
push ecx
mov eax, dword ptr [ebp - 4]
sub eax, 88
push eax
pop eax
push dword ptr [eax]
push 2
pop ebx
pop eax
imul ebx
push eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 88
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 84
push eax
pop ecx
pop eax
sub eax, 1
mov ebx, 8
imul ebx
add ecx, eax
push ecx
add dword ptr [esp], 4
mov eax, dword ptr [ebp - 4]
sub eax, 88
push eax
pop eax
push dword ptr [eax]
push 2
pop ebx
pop eax
imul ebx
push eax
push 10
pop ebx
pop eax
sub eax, ebx
push eax
pop eax
pop ebx
mov dword ptr [ebx], eax
$LN29AT5LOOPCOND@:
mov ebx, dword ptr [ebp - 4]
inc dword ptr [ebx - 88]
mov eax, dword ptr [esp]
cmp dword ptr [ebx - 88], eax
jle $LN29AT5LOOPBODY@
$LN29AT5LOOPEND@:
add esp, 4
mov eax, dword ptr [ebp - 4]
sub eax, 84
push eax
pop eax
add eax, 76
mov ecx, 20
$LN34AT16COPYSTRUCT@:
push dword ptr [eax]
sub eax, 4
loop $LN34AT16COPYSTRUCT@
call __function@LN14AT1prod
sub esp, 8
movsd qword ptr [esp], xmm0
push offset __string@1
call crt_printf
add esp, 12
leave
ret 0

start:
call __function@LN0AT0test
exit
end start