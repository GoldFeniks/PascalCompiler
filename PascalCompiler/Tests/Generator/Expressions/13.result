include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@4025000000000000 dq 4025000000000000r ;10.5
__real@4034800000000000 dq 4034800000000000r ;20.5
__string@0 db 37, 102, 10, 0
.code
__function@LN0AT0test:
enter 32, 1
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
push dword ptr [__real@4025000000000000 + 4]
push dword ptr [__real@4025000000000000]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
push dword ptr [__real@4034800000000000 + 4]
push dword ptr [__real@4034800000000000]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
push 2
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
subsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
divsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 28
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
mulsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
xor byte ptr [esp + 7], 128
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 36
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 12
leave
ret 0

start:
call __function@LN0AT0test
exit
end start