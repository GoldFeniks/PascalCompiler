include c:\masm32\include\masm32rt.inc
.xmm
.const
__real@4025000000000000 dq 4025000000000000r ;10.5
__real@4034800000000000 dq 4034800000000000r ;20.5
__string@0 db 37,100,10,0
.code
__function@LN0AT0test:
enter 20, 1
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
push dword ptr [__real@4025000000000000 + 4]
push dword ptr [__real@4025000000000000]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
push dword ptr [__real@4034800000000000 + 4]
push dword ptr [__real@4034800000000000]
movsd xmm0, qword ptr [esp]
add esp, 8
pop ebx
movsd qword ptr [ebx], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setae al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setbe al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
seta al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setb al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push 10
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
subsd xmm0, xmm1
movsd qword ptr [esp], xmm0
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
seta al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
push 11
mov eax, dword ptr [esp]
sub esp, 4
cvtsi2sd xmm0, eax
movsd qword ptr [esp], xmm0
movsd xmm1, qword ptr [esp]
add esp, 8
movsd xmm0, qword ptr [esp]
addsd xmm0, xmm1
movsd qword ptr [esp], xmm0
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
comisd xmm0, xmm1
setb al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
ucomisd xmm0, xmm1
lahf 
test ah, 68
jp $LN20AT12CONDFAIL@
mov dword ptr [esp], -1
jmp $LN20AT12ENDCOND@
$LN20AT12CONDFAIL@:
mov dword ptr [esp], 0
$LN20AT12ENDCOND@:
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
ucomisd xmm0, xmm1
lahf 
test ah, 68
jnp $LN22AT12CONDFAIL@
mov dword ptr [esp], -1
jmp $LN22AT12ENDCOND@
$LN22AT12CONDFAIL@:
mov dword ptr [esp], 0
$LN22AT12ENDCOND@:
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 20
push eax
pop eax
push dword ptr [eax + 4]
push dword ptr [eax]
movsd xmm0, qword ptr [esp + 8]
movsd xmm1, qword ptr [esp]
add esp, 12
ucomisd xmm0, xmm1
lahf 
test ah, 68
jp $LN24AT17CONDFAIL@
mov dword ptr [esp], -1
jmp $LN24AT17ENDCOND@
$LN24AT17CONDFAIL@:
mov dword ptr [esp], 0
$LN24AT17ENDCOND@:
not dword ptr [esp]
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 24
push eax
pop eax
push dword ptr [eax]
push offset __string@0
call crt_printf
add esp, 8
leave 
ret 0

start:
call __function@LN0AT0test
exit
end start