include c:\masm32\include\masm32rt.inc
.xmm
.const
__string@0 db 37, 100, 37, 100, 37, 100, 37, 100, 37, 100, 37, 100, 37, 100, 10, 0
.code
__function@LN0AT0test:
enter 12, 1
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
push 10
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
push 20
pop eax
pop ebx
mov dword ptr [ebx], eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setne al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
not dword ptr [esp]
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
sete al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setne al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setl al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setg al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setle al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
mov eax, dword ptr [ebp - 4]
sub eax, 8
push eax
pop eax
push dword ptr [eax]
mov eax, dword ptr [ebp - 4]
sub eax, 12
push eax
pop eax
push dword ptr [eax]
pop ebx
cmp dword ptr [esp], ebx
setge al
sub al, 1
movsx eax, al
mov dword ptr [esp], eax
push offset __string@0
call crt_printf
add esp, 32
leave
ret 0

start:
call __function@LN0AT0test
exit
end start